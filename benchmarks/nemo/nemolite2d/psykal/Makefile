# Makefile for nemolite2d using PSyclone to generate the PSy 
# layer. Note that this Makefile contains just the PSyclone
# pre-processing/source-code generation step and will prepare
# an output folder with the generated code ready to be built.
#
# To finish the building process it is necessary to run the
# Makefile inside the generated subfolder.
#
# We do this for two reasons:
#  - Usually we want to compare different versions generated by
#  PSyclone, generating target subfolders allows to work with
#  different versions concurrently.
#  - Some libraries need to be compiled in a specific way (e.g.
#  with OpenCL support) to work with the generated code. Copying
#  the static library inside the subfolder means that we maintain
#  a working copy even if we recompile the libraries with different
#  options. Also each subfolder is standalone and can be renamed.
#
# This Makefile expects the following env. vars to be set:
#
# F90       - How to invoke the Fortran compiler
# F90FLAGS  - Flags to pass to the Fortran compiler
# OMPFLAGS  - Flags for compiling with OpenMP
# AR        - Command to use when creating an archive (.a)
#
# 'psyclone' must also be on your PATH.


# Location of the dl_timer, infrastucture and OpenCL-wrapper code
# (all submodules in the git repo).
SHARED_DIR = ../../../../shared
TIMER_DIR = ${SHARED_DIR}/dl_timer
TIMER_INC = ${TIMER_DIR}/src
TIMER_LIB = ${TIMER_DIR}/libdl_timer_omp.a
TIMER_LIB_DM = ${TIMER_DIR}/libdl_timer_mpi.a
INF_DIR = ${SHARED_DIR}/dl_esm_inf/finite_difference
INF_INC = ${INF_DIR}/src
INF_LIB = ${INF_DIR}/src/lib_fd.a
FORTCL_DIR = ${SHARED_DIR}/FortCL/
FORTCL_INC = ${SHARED_DIR}/FortCL/src/
FORTCL_LIB = ${SHARED_DIR}/FortCL/src/libFortCL.a
COMMON_DIR = ../common
COMMON_LIB = ${COMMON_DIR}/nemolite2d_common.a

# The targets that this Makefile supports
.PHONY: all nemolite2d_serial nemolite2d_omp nemolite2d_mpi nemolite2d_acc \
	nemolite2d_hybrid nemolite2d_ocl nemolite2d_mpiocl nemolite2d_ompt \
	nemolite2d_ompt_mpi nemolite2d_omp_gpu

# We don't include the OpenACC or OpenCL targets here as they
# have specialist compiler requirements so we require the user
# to explicitly request that they be built.
all: nemolite2d_serial

# The kernels used by this application and their location
KERNEL_DIR = ../kernels/fortran

# Shorthand for invoking PSyclone
PSYCLONE = psyclone -api gocean1.0 -d ${KERNEL_DIR} -l output

# Serial PSyclone code-generation of NemoLite2D
nemolite2d_serial: serial_libs nemolite2d_alg.f90 psyclone_scripts/serial_transform.py
	@echo "Generating NemoLite2D Serial"; rm -rf $@; mkdir -p $@
	${PSYCLONE} -nodm -s psyclone_scripts/serial_transform.py \
		-oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2d
	@echo "Serial version prepared."

# OpenMP PSyclone code-generation of NemoLite2D
nemolite2d_omp: serial_libs nemolite2d_alg.f90 psyclone_scripts/omp_transform.py
	@echo "Generating NemoLite2D with OpenMP using omp_transform.py"; rm -rf $@; mkdir -p $@
	${PSYCLONE} -nodm -s psyclone_scripts/omp_transform.py \
		-oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2d
	@echo "OpenMP version prepared."

# OpenMP GPU offloading PSyclone code-generation of NemoLite2D
nemolite2d_omp_gpu: serial_libs nemolite2d_alg.f90 psyclone_scripts/omp_transform.py
	@echo "Generating NemoLite2D with OpenMP GPU offloading using omp_gpu_transform.py"; rm -rf $@; mkdir -p $@
	${PSYCLONE} -nodm -s psyclone_scripts/omp_gpu_transform.py \
		-oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2d
	@echo "OpenMP version prepared."

# OpenMP task PSyclone code-generation of NemoLite2D
nemolite2d_ompt: serial_libs nemolite2d_alg.f90 psyclone_scripts/omp_task_transform.py
	@echo "Generating NemoLite2D with OpenMP using omp_task_transform.py"; rm -rf $@; mkdir -p $@
	${PSYCLONE} -nodm -s ./psyclone_scripts/omp_task_transform.py \
		-oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2d
	@echo "OpenMP task version prepared."

nemolite2d_ompt_mpi: parallel_libs nemolite2d_alg.f90 psyclone_scripts/omp_task_transform.py
	@echo "Generating NemoLite2D with OpenMP tasks and MPI"; rm -rf $@; mkdir -p $@
	${PSYCLONE} -dm -s ./psyclone_scripts/omp_task_transform.py \
	   	-oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB_DM} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2d
	@echo "Task + MPI version prepared."

# MPI PSyclone code-generation of NemoLite2D
nemolite2d_mpi: parallel_libs nemolite2d_alg.f90 psyclone_scripts/serial_transform.py
	@echo "Generating NemoLite2D with MPI"; rm -rf $@; mkdir -p $@
	${PSYCLONE} -dm -s psyclone_scripts/serial_transform.py \
	   	-oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB_DM} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2d
	@echo "MPI version prepared."

# Hybrid PSyclone code-generation of NemoLite2D
nemolite2d_hybrid: parallel_libs nemolite2d_alg.f90 psyclone_scripts/omp_transform.py
	@echo "Generating NemoLite2D with hybrid MPI+OpenMP using omp_transform.py"
	rm -rf $@; mkdir -p $@
	${PSYCLONE} -dm -s psyclone_scripts/omp_transform.py \
		-oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB_DM} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2d
	@echo "Hybrid: MPI+OpenMP version prepared."

# OpenACC PSyclone code-generation of NemoLite2D (current PSyclone 1.9 will fail
# to generate the OpenACC for the GOcean API)
nemolite2d_acc: serial_libs nemolite2d_alg.f90 psyclone_scripts/acc_transform.py
	@echo "Generating NemoLite2D with OpenACC"; rm -rf $@; mkdir -p $@
	${PSYCLONE} -nodm -s psyclone_scripts/acc_transform.py \
		-I ${COMMON_DIR} \
		-okern $@ -oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2dacc
	@echo "OpenACC version prepared."

# OpenCL PSyclone code-generation of NemoLite2D
nemolite2d_ocl: serial_libs fortcl_lib nemolite2d_alg.f90 psyclone_scripts/ocl_transform.py
	@echo "Generating NemoLite2D with OpenCL"; rm -rf $@; mkdir -p $@
	# This PSyclone invokation will need to resolve some Fortran modules which need
	# to be found in the path provided by the -I parameter.
	${PSYCLONE} -nodm -s psyclone_scripts/ocl_transform.py --kernel-renaming single \
		-I ${COMMON_DIR} \
	   	-okern $@ -oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2docl
	@echo "OpenCL version prepared. There are additional optional targets inside"
	@echo "the $@ folder to compile ahead-of-time the OpenCL kernels."

# MPI+OpenCL PSyclone code-generation of NemoLite2D (currently PSyclone 1.9 will not
# generate distributed memory OpenCL code)
nemolite2d_mpiocl: parallel_libs fortcl_lib nemolite2d_alg.f90 psyclone_scripts/ocl_transform.py
	@echo "Generating NemoLite2D with MPI and OpenCL"; rm -rf $@; mkdir -p $@
	# This PSyclone invokation will need to resolve some Fortran modules which need
	# to be found in the path provided by the -I parameter.
	${PSYCLONE} -s psyclone_scripts/ocl_transform.py --kernel-renaming single \
		-I ${COMMON_DIR} \
		-okern $@ -oalg $@/alg.f90 -opsy $@/psy.f90 nemolite2d_alg.f90
	# Each generated folder needs its purposely built inf_lib and timer_lib
	cp ${INF_LIB} $@/.
	cp ${TIMER_LIB_DM} $@/libdl_timer.a
	cp namelist $@/.
	cp Makefile_gen $@/Makefile
	cd $@ && make nemolite2docl
	@echo "OpenCL version prepared. There are additional optional targets inside"
	@echo "the $@ folder to compile ahead-of-time the OpenCL kernels."


# Build the infrastructure libraries
parallel_libs: timer_lib_parallel mpi_inf_lib common_lib_mpi

serial_libs: timer_lib serial_inf_lib common_lib

timer_lib:
	${MAKE} -C ${TIMER_DIR} sm_lib

timer_lib_parallel:
	${MAKE} -C ${TIMER_DIR} MPIF90="${F90}" dm_lib

serial_inf_lib:
	${MAKE} -C ${INF_DIR} distclean
	${MAKE} -C ${INF_DIR} fd_lib

mpi_inf_lib:
	${MAKE} -C ${INF_DIR} distclean
	${MAKE} -C ${INF_DIR} dm_fd_lib

fortcl_lib:
	${MAKE} -C ${FORTCL_DIR}

common_lib:
	${MAKE} -C ${COMMON_DIR}

common_lib_mpi:
	${MAKE} -C ${COMMON_DIR} MPI=yes

clean: 
	rm -rf nemolite2d_serial nemolite2d_omp nemolite2d_mpi
	rm -rf nemolite2d_hybrid nemolite2d_acc nemolite2d_ocl nemolite2d_mpiocl
	rm -rf nemolite2d_ompt nemolite2d_ompt_mpi nemolite2d_omp_gpu

libclean:
	${MAKE} -C ${INF_DIR} distclean
	${MAKE} -C ${FORTCL_DIR} allclean
	${MAKE} -C ${TIMER_DIR} allclean
	${MAKE} -C ${COMMON_DIR} allclean

allclean: clean libclean
	rm -f ${KERNELS:.o=.f90}
	rm -f *.exe fparser.log
	rm -f *.lst *.cg *.opt *.optrpt *.s
	rm -rf *_wpl_dir/

docs:
	doxygen gocean2d.doxy.config
