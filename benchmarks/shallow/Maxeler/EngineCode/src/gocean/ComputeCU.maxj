package gocean;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

class ComputeCU extends Kernel {

	// 64-bit floating point
	private static final DFEType type = dfeFloat(11,53);

	protected ComputeCU(KernelParameters parameters) {
		super(parameters);

		int width = 256;
		DFEVar p = io.input("p", type);
		DFEVar u = io.input("u", type);

		CounterChain chain = control.count.makeCounterChain();
		DFEVar i = chain.addCounter(width, 1);

	    //CU(I,J) = 0.5d0*(P(i+1,J)+P(I,J))*U(I,J)
        //DFEVar cu = i < width-1 ? 0.5*(stream.offset(p, +1) + p)*u : 0.0;
        DFEVar cu = p + u;

		io.output("cu", cu, type);
	}

}
